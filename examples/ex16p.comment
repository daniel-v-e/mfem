                       MFEM Example 16 - Parallel Version

 Compile with: make ex16p

 Sample runs:  mpirun -np 4 ex16p
               mpirun -np 4 ex16p -m ../data/inline-tri.mesh
               mpirun -np 4 ex16p -m ../data/disc-nurbs.mesh -tf 2
               mpirun -np 4 ex16p -s 1 -a 0.0 -k 1.0
               mpirun -np 4 ex16p -s 2 -a 1.0 -k 0.0
               mpirun -np 8 ex16p -s 3 -a 0.5 -k 0.5 -o 4
               mpirun -np 4 ex16p -s 14 -dt 1.0e-4 -tf 4.0e-2 -vs 40
               mpirun -np 16 ex16p -m ../data/fichera-q2.mesh
               mpirun -np 16 ex16p -m ../data/fichera-mixed.mesh
               mpirun -np 16 ex16p -m ../data/escher-p2.mesh
               mpirun -np 8 ex16p -m ../data/beam-tet.mesh -tf 10 -dt 0.1
               mpirun -np 4 ex16p -m ../data/amr-quad.mesh -o 4 -rs 0 -rp 0
               mpirun -np 4 ex16p -m ../data/amr-hex.mesh -o 2 -rs 0 -rp 0

 Description:  This example solves a time dependent nonlinear heat equation
               problem of the form du/dt = C(u), with a non-linear diffusion
               operator C(u) = \nabla \cdot (\kappa + \alpha u) \nabla u.

               The example demonstrates the use of nonlinear operators (the
               class ConductionOperator defining C(u)), as well as their
               implicit time integration. Note that implementing the method
               ConductionOperator::ImplicitSolve is the only requirement for
               high-order implicit (SDIRK) time integration. In this example,
               the diffusion operator is linearized by evaluating with the
               lagged solution from the previous timestep, so there is only
               a linear solve. Optional saving with ADIOS2
               (adios2.readthedocs.io) is also illustrated.

               We recommend viewing examples 2, 9 and 10 before viewing this
               example.
